<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Film extends \App\Entity\Film implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'nomFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'lienFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'notePresseFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'datefilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'resumeFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'adresseImageCouvertureFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'realisateurFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'sommeilFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'genre', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'favorisFilm'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'nomFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'lienFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'notePresseFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'datefilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'resumeFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'adresseImageCouvertureFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'realisateurFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'sommeilFilm', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'genre', '' . "\0" . 'App\\Entity\\Film' . "\0" . 'favorisFilm'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Film $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getGenre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGenre', []);

        return parent::getGenre();
    }

    /**
     * {@inheritDoc}
     */
    public function setGenre(?string $genre): \App\Entity\Film
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGenre', [$genre]);

        return parent::setGenre($genre);
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNomFilm(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomFilm', []);

        return parent::getNomFilm();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomFilm(string $nomFilm): \App\Entity\Film
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomFilm', [$nomFilm]);

        return parent::setNomFilm($nomFilm);
    }

    /**
     * {@inheritDoc}
     */
    public function getLienFilm(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLienFilm', []);

        return parent::getLienFilm();
    }

    /**
     * {@inheritDoc}
     */
    public function setLienFilm(string $lienFilm): \App\Entity\Film
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLienFilm', [$lienFilm]);

        return parent::setLienFilm($lienFilm);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotePresseFilm(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotePresseFilm', []);

        return parent::getNotePresseFilm();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotePresseFilm(int $notePresseFilm): \App\Entity\Film
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotePresseFilm', [$notePresseFilm]);

        return parent::setNotePresseFilm($notePresseFilm);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatefilm(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatefilm', []);

        return parent::getDatefilm();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatefilm(\DateTimeInterface $datefilm): \App\Entity\Film
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatefilm', [$datefilm]);

        return parent::setDatefilm($datefilm);
    }

    /**
     * {@inheritDoc}
     */
    public function getResumeFilm(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResumeFilm', []);

        return parent::getResumeFilm();
    }

    /**
     * {@inheritDoc}
     */
    public function setResumeFilm(string $resumeFilm): \App\Entity\Film
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResumeFilm', [$resumeFilm]);

        return parent::setResumeFilm($resumeFilm);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresseImageCouvertureFilm(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresseImageCouvertureFilm', []);

        return parent::getAdresseImageCouvertureFilm();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresseImageCouvertureFilm(string $adresseImageCouvertureFilm): \App\Entity\Film
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresseImageCouvertureFilm', [$adresseImageCouvertureFilm]);

        return parent::setAdresseImageCouvertureFilm($adresseImageCouvertureFilm);
    }

    /**
     * {@inheritDoc}
     */
    public function getRealisateurFilm(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRealisateurFilm', []);

        return parent::getRealisateurFilm();
    }

    /**
     * {@inheritDoc}
     */
    public function setRealisateurFilm(string $realisateurFilm): \App\Entity\Film
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRealisateurFilm', [$realisateurFilm]);

        return parent::setRealisateurFilm($realisateurFilm);
    }

    /**
     * {@inheritDoc}
     */
    public function isSommeilFilm(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSommeilFilm', []);

        return parent::isSommeilFilm();
    }

    /**
     * {@inheritDoc}
     */
    public function getSommeilFilm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSommeilFilm', []);

        return parent::getSommeilFilm();
    }

    /**
     * {@inheritDoc}
     */
    public function setSommeilFilm($sommeilFilm)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSommeilFilm', [$sommeilFilm]);

        return parent::setSommeilFilm($sommeilFilm);
    }

    /**
     * {@inheritDoc}
     */
    public function getFavorisFilm(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFavorisFilm', []);

        return parent::getFavorisFilm();
    }

    /**
     * {@inheritDoc}
     */
    public function addFavorisFilm(\App\Entity\User $favorisFilm): \App\Entity\Film
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFavorisFilm', [$favorisFilm]);

        return parent::addFavorisFilm($favorisFilm);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFavorisFilm(\App\Entity\User $favorisFilm): \App\Entity\Film
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFavorisFilm', [$favorisFilm]);

        return parent::removeFavorisFilm($favorisFilm);
    }

}
